//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CronusWebServiceSoap", Namespace="http://tempuri.org/CronusWebService")]
public partial class CronusWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetServerErrorOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetEmployeeByIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateEmployeeOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteEmployeeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPrimaryKeyConstraintNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllColumnNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetTotalTablesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetTotalColumnsOperationCompleted;
    
    /// <remarks/>
    public CronusWebService() {
        this.Url = "http://localhost/WebApplicationCronus/CronusWebService.asmx";
    }
    
    /// <remarks/>
    public event GetServerErrorCompletedEventHandler GetServerErrorCompleted;
    
    /// <remarks/>
    public event GetEmployeeByIdCompletedEventHandler GetEmployeeByIdCompleted;
    
    /// <remarks/>
    public event CreateEmployeeCompletedEventHandler CreateEmployeeCompleted;
    
    /// <remarks/>
    public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
    
    /// <remarks/>
    public event DeleteEmployeeCompletedEventHandler DeleteEmployeeCompleted;
    
    /// <remarks/>
    public event GetPrimaryKeyConstraintNamesCompletedEventHandler GetPrimaryKeyConstraintNamesCompleted;
    
    /// <remarks/>
    public event GetAllColumnNamesCompletedEventHandler GetAllColumnNamesCompleted;
    
    /// <remarks/>
    public event GetTotalTablesCompletedEventHandler GetTotalTablesCompleted;
    
    /// <remarks/>
    public event GetTotalColumnsCompletedEventHandler GetTotalColumnsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetServerError", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetServerError() {
        object[] results = this.Invoke("GetServerError", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetServerError(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetServerError", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetServerError(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetServerErrorAsync() {
        this.GetServerErrorAsync(null);
    }
    
    /// <remarks/>
    public void GetServerErrorAsync(object userState) {
        if ((this.GetServerErrorOperationCompleted == null)) {
            this.GetServerErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerErrorOperationCompleted);
        }
        this.InvokeAsync("GetServerError", new object[0], this.GetServerErrorOperationCompleted, userState);
    }
    
    private void OnGetServerErrorOperationCompleted(object arg) {
        if ((this.GetServerErrorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetServerErrorCompleted(this, new GetServerErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetEmployeeById", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetEmployeeById(string empId) {
        object[] results = this.Invoke("GetEmployeeById", new object[] {
                    empId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetEmployeeById(string empId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetEmployeeById", new object[] {
                    empId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetEmployeeById(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetEmployeeByIdAsync(string empId) {
        this.GetEmployeeByIdAsync(empId, null);
    }
    
    /// <remarks/>
    public void GetEmployeeByIdAsync(string empId, object userState) {
        if ((this.GetEmployeeByIdOperationCompleted == null)) {
            this.GetEmployeeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByIdOperationCompleted);
        }
        this.InvokeAsync("GetEmployeeById", new object[] {
                    empId}, this.GetEmployeeByIdOperationCompleted, userState);
    }
    
    private void OnGetEmployeeByIdOperationCompleted(object arg) {
        if ((this.GetEmployeeByIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEmployeeByIdCompleted(this, new GetEmployeeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/CreateEmployee", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CreateEmployee(KeyValuePairCronus[] employeeData) {
        object[] results = this.Invoke("CreateEmployee", new object[] {
                    employeeData});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateEmployee(KeyValuePairCronus[] employeeData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateEmployee", new object[] {
                    employeeData}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCreateEmployee(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CreateEmployeeAsync(KeyValuePairCronus[] employeeData) {
        this.CreateEmployeeAsync(employeeData, null);
    }
    
    /// <remarks/>
    public void CreateEmployeeAsync(KeyValuePairCronus[] employeeData, object userState) {
        if ((this.CreateEmployeeOperationCompleted == null)) {
            this.CreateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeOperationCompleted);
        }
        this.InvokeAsync("CreateEmployee", new object[] {
                    employeeData}, this.CreateEmployeeOperationCompleted, userState);
    }
    
    private void OnCreateEmployeeOperationCompleted(object arg) {
        if ((this.CreateEmployeeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateEmployeeCompleted(this, new CreateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/UpdateEmployee", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateEmployee(KeyValuePairCronus[] employeeData) {
        object[] results = this.Invoke("UpdateEmployee", new object[] {
                    employeeData});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateEmployee(KeyValuePairCronus[] employeeData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateEmployee", new object[] {
                    employeeData}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateEmployee(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateEmployeeAsync(KeyValuePairCronus[] employeeData) {
        this.UpdateEmployeeAsync(employeeData, null);
    }
    
    /// <remarks/>
    public void UpdateEmployeeAsync(KeyValuePairCronus[] employeeData, object userState) {
        if ((this.UpdateEmployeeOperationCompleted == null)) {
            this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
        }
        this.InvokeAsync("UpdateEmployee", new object[] {
                    employeeData}, this.UpdateEmployeeOperationCompleted, userState);
    }
    
    private void OnUpdateEmployeeOperationCompleted(object arg) {
        if ((this.UpdateEmployeeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/DeleteEmployee", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string DeleteEmployee(string empId) {
        object[] results = this.Invoke("DeleteEmployee", new object[] {
                    empId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteEmployee(string empId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteEmployee", new object[] {
                    empId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndDeleteEmployee(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteEmployeeAsync(string empId) {
        this.DeleteEmployeeAsync(empId, null);
    }
    
    /// <remarks/>
    public void DeleteEmployeeAsync(string empId, object userState) {
        if ((this.DeleteEmployeeOperationCompleted == null)) {
            this.DeleteEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeOperationCompleted);
        }
        this.InvokeAsync("DeleteEmployee", new object[] {
                    empId}, this.DeleteEmployeeOperationCompleted, userState);
    }
    
    private void OnDeleteEmployeeOperationCompleted(object arg) {
        if ((this.DeleteEmployeeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteEmployeeCompleted(this, new DeleteEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetPrimaryKeyConstraintNames", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] GetPrimaryKeyConstraintNames() {
        object[] results = this.Invoke("GetPrimaryKeyConstraintNames", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPrimaryKeyConstraintNames(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPrimaryKeyConstraintNames", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndGetPrimaryKeyConstraintNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void GetPrimaryKeyConstraintNamesAsync() {
        this.GetPrimaryKeyConstraintNamesAsync(null);
    }
    
    /// <remarks/>
    public void GetPrimaryKeyConstraintNamesAsync(object userState) {
        if ((this.GetPrimaryKeyConstraintNamesOperationCompleted == null)) {
            this.GetPrimaryKeyConstraintNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryKeyConstraintNamesOperationCompleted);
        }
        this.InvokeAsync("GetPrimaryKeyConstraintNames", new object[0], this.GetPrimaryKeyConstraintNamesOperationCompleted, userState);
    }
    
    private void OnGetPrimaryKeyConstraintNamesOperationCompleted(object arg) {
        if ((this.GetPrimaryKeyConstraintNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPrimaryKeyConstraintNamesCompleted(this, new GetPrimaryKeyConstraintNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetAllColumnNames", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] GetAllColumnNames() {
        object[] results = this.Invoke("GetAllColumnNames", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllColumnNames(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllColumnNames", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndGetAllColumnNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void GetAllColumnNamesAsync() {
        this.GetAllColumnNamesAsync(null);
    }
    
    /// <remarks/>
    public void GetAllColumnNamesAsync(object userState) {
        if ((this.GetAllColumnNamesOperationCompleted == null)) {
            this.GetAllColumnNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllColumnNamesOperationCompleted);
        }
        this.InvokeAsync("GetAllColumnNames", new object[0], this.GetAllColumnNamesOperationCompleted, userState);
    }
    
    private void OnGetAllColumnNamesOperationCompleted(object arg) {
        if ((this.GetAllColumnNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllColumnNamesCompleted(this, new GetAllColumnNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetTotalTables", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetTotalTables() {
        object[] results = this.Invoke("GetTotalTables", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetTotalTables(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetTotalTables", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetTotalTables(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetTotalTablesAsync() {
        this.GetTotalTablesAsync(null);
    }
    
    /// <remarks/>
    public void GetTotalTablesAsync(object userState) {
        if ((this.GetTotalTablesOperationCompleted == null)) {
            this.GetTotalTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalTablesOperationCompleted);
        }
        this.InvokeAsync("GetTotalTables", new object[0], this.GetTotalTablesOperationCompleted, userState);
    }
    
    private void OnGetTotalTablesOperationCompleted(object arg) {
        if ((this.GetTotalTablesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTotalTablesCompleted(this, new GetTotalTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CronusWebService/GetTotalColumns", RequestNamespace="http://tempuri.org/CronusWebService", ResponseNamespace="http://tempuri.org/CronusWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetTotalColumns() {
        object[] results = this.Invoke("GetTotalColumns", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetTotalColumns(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetTotalColumns", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetTotalColumns(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetTotalColumnsAsync() {
        this.GetTotalColumnsAsync(null);
    }
    
    /// <remarks/>
    public void GetTotalColumnsAsync(object userState) {
        if ((this.GetTotalColumnsOperationCompleted == null)) {
            this.GetTotalColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalColumnsOperationCompleted);
        }
        this.InvokeAsync("GetTotalColumns", new object[0], this.GetTotalColumnsOperationCompleted, userState);
    }
    
    private void OnGetTotalColumnsOperationCompleted(object arg) {
        if ((this.GetTotalColumnsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetTotalColumnsCompleted(this, new GetTotalColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CronusWebService")]
public partial class KeyValuePairCronus {
    
    private string keyField;
    
    private string valueField;
    
    /// <remarks/>
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetServerErrorCompletedEventHandler(object sender, GetServerErrorCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetServerErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetServerErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetEmployeeByIdCompletedEventHandler(object sender, GetEmployeeByIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEmployeeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetEmployeeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void CreateEmployeeCompletedEventHandler(object sender, CreateEmployeeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateEmployeeCompletedEventHandler(object sender, UpdateEmployeeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void DeleteEmployeeCompletedEventHandler(object sender, DeleteEmployeeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetPrimaryKeyConstraintNamesCompletedEventHandler(object sender, GetPrimaryKeyConstraintNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPrimaryKeyConstraintNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPrimaryKeyConstraintNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetAllColumnNamesCompletedEventHandler(object sender, GetAllColumnNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllColumnNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllColumnNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetTotalTablesCompletedEventHandler(object sender, GetTotalTablesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTotalTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetTotalTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetTotalColumnsCompletedEventHandler(object sender, GetTotalColumnsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTotalColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetTotalColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
